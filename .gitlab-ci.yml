image: node:latest

services:
  - mysql:5.7

variables:
  NODE_ENV: "testing"
  MYSQL_DATABASE: family-graph
  MYSQL_ROOT_PASSWORD: mysql_strong_password
  CODECOV_TOKEN: cc074b5e-0c59-4e4e-822e-0b2464274e70
  sqlhost: mysql
  sqluser: root

cache:
  paths:
  - node_modules/

stages:
  - test
  - deploy

migrations:
  stage: test
  before_script:
    - npm install
  script:
    - npm run migrations

codecov:
  stage: test
  before_script:
    - npm install
    - npm run migrations
    - npm install -g codecov
  script:
    - npm run coverage && codecov

lint:
  stage: test
  services: []
  before_script:
    - npm install
  script:
    - npm run lint

vulnerabilities:
  stage: test
  services: []
  before_script:
    - npm install
  script:
    - npm run nsp

deploy to production:
  stage: deploy
  environment: Production
  services: []
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_DOMAIN >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - rm ./package-lock.json
    - npm install
    - scp -o 'StrictHostKeyChecking no' -r . $DEPLOY_USER@$DEPLOY_DOMAIN:$DEPLOY_PATH/prod
  only:
    - master

deploy to stage:
  stage: deploy
  environment: Staging
  services: []
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo $SSH_PRIVATE_KEY)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_DOMAIN >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - rm ./package-lock.json
    - npm install
    - scp -o 'StrictHostKeyChecking no' -r . $DEPLOY_USER@$DEPLOY_DOMAIN:$DEPLOY_PATH/stage
  only:
    - develop